{"version":3,"sources":["components/Profile/Profile.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/profileDataForm.jsx","assets/images/uload.svg","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/PostForm.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatus","props","useState","editMode","setEditMode","status","setStatus","useEffect","className","s","onDoubleClick","title","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileDataFormReduxForm","reduxForm","form","profile","handleSubmit","error","onSubmit","profileEdit","profileEditInfo","fullName","createField","Input","required","about","Textarea","job","jobCheck","jobSkills","profileEditContacts","Object","keys","contacts","map","key","s2","_extends","assign","target","i","arguments","length","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref","svgRef","createElement","viewBox","width","style","filter","ref","d","stroke","fillRule","fill","fillOpacity","ForwardRef","forwardRef","ProfileData","isOwner","goToEditMode","contactTitle","contactValue","aboutMe","lookingForAJob","lookingForAJobDescription","jobText","editBtn","onClick","Contact","cn","emptyContact","contact","href","rel","ProfileInfo","savePhoto","saveProfile","Preloader","descriptionBlock","src","photos","large","userDefaultMale","profileAva","profileAvaDefault","alt","changeAva","type","changeAvaBtn","files","descriptionInfo","initialValues","formData","then","Post","item","img","text","message","maxLength300","maxLengthCreator","PostReduxForm","onSubmitSuccess","result","dispatch","reset","Field","name","placeholder","component","validate","AddPostForm","values","addPost","postText","MyPosts","React","memo","postsElements","posts","p","index","post","reverse","postsTitle","MyPostsContainer","requestPosts","Component","compose","connect","state","newPostText","profilePage","Profile","userId","PureComponent","ProfileContainer","match","params","autorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.00c61dde.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__sFNiG\",\"status\":\"Profile_status__1cU9_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__SLc7M\",\"profileAva\":\"ProfileInfo_profileAva__2nBE-\",\"descriptionInfo\":\"ProfileInfo_descriptionInfo__35QDQ\",\"contacts\":\"ProfileInfo_contacts__xEA0x\",\"about\":\"ProfileInfo_about__361Ws\",\"job\":\"ProfileInfo_job__1SR3b\",\"lookingForAJob\":\"ProfileInfo_lookingForAJob__ZYQxj\",\"contact\":\"ProfileInfo_contact__2b-nZ\",\"emptyContact\":\"ProfileInfo_emptyContact__1A0w0\",\"changeAva\":\"ProfileInfo_changeAva__3RnMM\",\"changeAvaBtn\":\"ProfileInfo_changeAvaBtn__3u7jb\",\"profileEdit\":\"ProfileInfo_profileEdit__3pA4E\",\"profileEditInfo\":\"ProfileInfo_profileEditInfo__3UTEt\",\"profileEditContacts\":\"ProfileInfo_profileEditContacts__2MkMQ\",\"fullName\":\"ProfileInfo_fullName__7bC68\",\"jobSkills\":\"ProfileInfo_jobSkills__3eCFR\",\"jobCheck\":\"ProfileInfo_jobCheck__1aQEE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__3JU-1\",\"postsTitle\":\"MyPosts_postsTitle__v_eCk\",\"postAdd\":\"MyPosts_postAdd__3L9W8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__13-o5\",\"img\":\"Post_img__2LVqJ\",\"like\":\"Post_like__3-3oy\",\"text\":\"Post_text__3R67t\"};","import React, {useEffect, useState} from 'react';\r\n\r\nimport s from '../Profile.module.css';\r\n\r\nconst ProfileStatus = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    };\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    };\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    };\r\n\r\n    return (\r\n        <div className={s.status}>\r\n            {!editMode &&\r\n            <span onDoubleClick={activateEditMode}\r\n                  title={'Click twice to change'}>{props.status || '--------------'}</span>\r\n            }\r\n            {editMode &&\r\n            <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode}\r\n                   value={status}/>\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ProfileStatus;","import React from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport {createField, Input, Textarea} from \"../../Common/FormsControls/FormsControls\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport {required} from \"../../../utils/validators/validators\";\r\nimport * as s2 from \"../../Common/FormsControls/FormControls.module.css\";\r\n\r\nconst ProfileDataForm = ({profile, handleSubmit, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit} className={s.profileEdit}>\r\n            <div className={s.profileEditInfo}>\r\n                <div className={s.fullName}>\r\n                    <b>FullName: </b> {createField('Full name', 'fullName', Input, 'text', [required])}\r\n                </div>\r\n                <div className={s.about}>\r\n                    <b>About Me: </b> {createField('About me', 'aboutMe', Textarea, 'text', [required])}\r\n                </div>\r\n                <div className={s.job}>\r\n                    <div\r\n                        className={s.jobCheck}>{createField(null, 'lookingForAJob', Input, 'checkbox', null, null, 'jobCheckbox', 'Looking for a job:')}</div>\r\n                    <div className={s.jobSkills}><b>My\r\n                        skills: </b> {createField('Looking For A Job Description', 'lookingForAJobDescription', Textarea, 'text', [required])}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={s.profileEditContacts}>\r\n                {Object.keys(profile.contacts).map(key => {\r\n                    return (\r\n                        <div key={key} className={s.contacts}>\r\n                            <b>{key}: </b> {createField(key, 'contacts.' + key, Input, 'text', [])}\r\n                        </div>\r\n                    )\r\n                })}\r\n                {error &&\r\n                <div className={s2.summaryError}>\r\n                    {error}\r\n                </div>\r\n                }\r\n                <button>Save</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({\r\n    form: 'edit-profile'\r\n})(ProfileDataForm);\r\n\r\nexport default ProfileDataFormReduxForm;\r\n\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar SvgUload = function SvgUload(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"-53 1 511 511.99906\",\n    width: \"20px\",\n    style: {\n      filter: \"drop-shadow(0px 1px 1px #000)\"\n    },\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M 276.410156 3.957031 C 274.0625 1.484375 270.84375 0 267.507812 0 L 67.777344 0 C 30.921875 0 0.5 30.300781 0.5 67.152344 L 0.5 444.84375 C 0.5 481.699219 30.921875 512 67.777344 512 L 338.863281 512 C 375.71875 512 406.140625 481.699219 406.140625 444.84375 L 406.140625 144.941406 C 406.140625 141.726562 404.65625 138.636719 402.554688 136.285156 Z M 279.996094 43.65625 L 364.464844 132.328125 L 309.554688 132.328125 C 293.230469 132.328125 279.996094 119.21875 279.996094 102.894531 Z M 338.863281 487.265625 L 67.777344 487.265625 C 44.652344 487.265625 25.234375 468.097656 25.234375 444.84375 L 25.234375 67.152344 C 25.234375 44.027344 44.527344 24.734375 67.777344 24.734375 L 255.261719 24.734375 L 255.261719 102.894531 C 255.261719 132.945312 279.503906 157.0625 309.554688 157.0625 L 381.40625 157.0625 L 381.40625 444.84375 C 381.40625 468.097656 362.113281 487.265625 338.863281 487.265625 Z M 338.863281 487.265625 \",\n    style: {\n      stroke: \"none\",\n      fillRule: \"nonzero\",\n      fill: \"#ffffff\",\n      fillOpacity: 1\n    }\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M 305.101562 401.933594 L 101.539062 401.933594 C 94.738281 401.933594 89.171875 407.496094 89.171875 414.300781 C 89.171875 421.101562 94.738281 426.667969 101.539062 426.667969 L 305.226562 426.667969 C 312.027344 426.667969 317.59375 421.101562 317.59375 414.300781 C 317.59375 407.496094 312.027344 401.933594 305.101562 401.933594 Z M 305.101562 401.933594 \",\n    style: {\n      stroke: \"none\",\n      fillRule: \"nonzero\",\n      fill: \"#ffffff\",\n      fillOpacity: 1\n    }\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M 140 268.863281 L 190.953125 214.074219 L 190.953125 349.125 C 190.953125 355.925781 196.519531 361.492188 203.320312 361.492188 C 210.125 361.492188 215.6875 355.925781 215.6875 349.125 L 215.6875 214.074219 L 266.640625 268.863281 C 269.113281 271.457031 272.332031 272.820312 275.667969 272.820312 C 278.636719 272.820312 281.730469 271.707031 284.078125 269.480469 C 289.027344 264.78125 289.398438 256.988281 284.699219 252.042969 L 212.226562 174.253906 C 209.875 171.78125 206.660156 170.296875 203.199219 170.296875 C 199.734375 170.296875 196.519531 171.78125 194.171875 174.253906 L 121.699219 252.042969 C 117 256.988281 117.371094 264.902344 122.316406 269.480469 C 127.511719 274.179688 135.300781 273.808594 140 268.863281 Z M 140 268.863281 \",\n    style: {\n      stroke: \"none\",\n      fillRule: \"nonzero\",\n      fill: \"#ffffff\",\n      fillOpacity: 1\n    }\n  }));\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgUload, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/uload.1a96bbac.svg\";\nexport { ForwardRef as ReactComponent };","import React, {useState} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport userDefaultMale from '../../../assets/images/userDefaultMale.png'\r\nimport Preloader from \"../../Common/Preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport ProfileDataForm from \"./profileDataForm\";\r\nimport {ReactComponent as UploadIcon} from '../../../assets/images/uload.svg';\r\nimport cn from 'classnames';\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    let onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n    };\r\n\r\n    let onSubmit = (formData) => {\r\n        const promise = saveProfile(formData);\r\n        promise.then(\r\n            () => {\r\n                setEditMode(false);\r\n            }\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className={s.descriptionBlock}>\r\n            <img src={profile.photos.large || userDefaultMale}\r\n                 className={profile.photos.large != null\r\n                     ? s.profileAva\r\n                     : s.profileAvaDefault\r\n                 } alt={'Profile Ava'}/>\r\n            {isOwner && <label className={s.changeAva}><UploadIcon/><input type={\"file\"} className={s.changeAvaBtn}\r\n                                                                           onChange={onMainPhotoSelected}/></label>}\r\n            <div className={s.descriptionInfo}>\r\n                {editMode\r\n                    ? <ProfileDataForm profile={profile} initialValues={profile} onSubmit={onSubmit}/>\r\n                    : <ProfileData profile={profile} isOwner={isOwner} goToEditMode={() => {\r\n                        setEditMode(true)\r\n                    }} status={status} updateStatus={updateStatus}/>}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode, status, updateStatus}) => {\r\n\r\n    let contacts = profile.contacts;\r\n\r\n    return (\r\n        <>\r\n            <div className={s.fullName}><b>{profile.fullName}</b></div>\r\n            <ProfileStatus status={status} updateStatus={updateStatus}/>\r\n            {contacts &&\r\n            <div className={s.contacts}>\r\n                {Object.keys(contacts).map(key => {\r\n                    return <Contact key={key} contactTitle={key} contactValue={contacts[key]}/>\r\n                })}\r\n            </div>\r\n            }\r\n            {profile.aboutMe &&\r\n            <div className={s.about}>\r\n                <b>About me: </b>{profile.aboutMe}\r\n            </div>\r\n            }\r\n            {profile.lookingForAJob &&\r\n            <div className={s.job}>\r\n                <div className={s.lookingForAJob}>\r\n                    <b>Looking For A Job!</b>\r\n                </div>\r\n                <div className={s.lookingForAJobDescription}>\r\n                    <b>My skills: </b>\r\n                    <span className={s.jobText}>{profile.lookingForAJobDescription}</span>\r\n                </div>\r\n            </div>\r\n            }\r\n            {isOwner && <div className={s.editBtn}>\r\n                <button onClick={goToEditMode}>Edit Mode</button>\r\n            </div>}\r\n        </>\r\n    )\r\n};\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return (\r\n        <a className={cn({[s.emptyContact]: contactValue == null}, s.contact)} href={contactValue} target=\"_blank\"\r\n           rel=\"noopener noreferrer\">{contactTitle}</a>\r\n    )\r\n};\r\n\r\nexport default ProfileInfo","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div>\r\n            <div className={s.item}>\r\n                <img className={s.img}\r\n                     src='https://social-network.samuraijs.com/activecontent/images/users/7298/user.jpg' alt=''/>\r\n                <span className={s.text}>{props.message}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Post","import React from \"react\";\r\nimport {Field, reduxForm, reset} from \"redux-form\";\r\n\r\nimport * as s from './MyPosts.module.css'\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../Common/FormsControls/FormsControls\";\r\n\r\nconst maxLength300 = maxLengthCreator(300);\r\n\r\nconst PostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div className={s.postAdd}>\r\n                <Field\r\n                    name={'postText'}\r\n                    placeholder={'Post text...'}\r\n                    component={Textarea}\r\n                    validate={[required, maxLength300]}\r\n                />\r\n                <button type=\"submit\">Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst afterSubmit = (result, dispatch) => {\r\n    dispatch(reset('dialog'));\r\n};\r\n\r\nconst PostReduxForm = reduxForm({\r\n    form: 'dialog',\r\n    onSubmitSuccess: afterSubmit\r\n})(PostForm);\r\n\r\nconst AddPostForm = (props) => {\r\n    const addPost = (values) => {\r\n        props.addPost(values.postText);\r\n    };\r\n    return <div className={s.login}>\r\n        <PostReduxForm onSubmit={addPost}/>\r\n    </div>\r\n};\r\n\r\nexport default AddPostForm;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport AddPostForm from \"./PostForm\";\r\n\r\nconst MyPosts = React.memo((props) => {\r\n\r\n    // Проходимся .map по массиву данных и создаем массив jsx элементов. Далее передаем их через пропсы в нужные компоненты.\r\n    let postsElements =\r\n        [...props.posts]\r\n            .map((p, index) => <Post message={p.post} key={index}/>)\r\n            .reverse();\r\n    return (\r\n        <div className={s.posts}>\r\n            <div className={s.postsTitle}>\r\n                <h3>My posts</h3>\r\n            </div>\r\n            <AddPostForm addPost={props.addPost}/>\r\n            {postsElements}\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default MyPosts","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {addPost, requestPosts} from '../../../redux/profile-reducer';\r\n\r\nimport MyPosts from './MyPosts';\r\nimport {compose} from \"redux\";\r\n\r\nclass MyPostsContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.requestPosts();\r\n    }\r\n\r\n    render() {\r\n        return <MyPosts {...this.props} />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        newPostText: state.profilePage.newPostText,\r\n        posts: state.profilePage.posts\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {addPost, requestPosts})\r\n)(MyPostsContainer);","import React, {PureComponent} from 'react';\r\nimport s from './Profile.module.css';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\nclass Profile extends PureComponent {\r\n    render() {\r\n        return (\r\n            <div className={s.profile}>\r\n                <ProfileInfo\r\n                    isOwner={this.props.isOwner}\r\n                    savePhoto={this.props.savePhoto}\r\n                    profile={this.props.profile}\r\n                    status={this.props.status}\r\n                    saveProfile={this.props.saveProfile}\r\n                    updateStatus={this.props.updateStatus}\r\n                />\r\n                {this.props.isOwner && <MyPostsContainer userId={this.props.userId}/>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Profile","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    getStatus,\r\n    getUserProfile,\r\n    requestPosts,\r\n    savePhoto,\r\n    saveProfile,\r\n    updateStatus\r\n} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.autorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push('/login');\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     isOwner={!this.props.match.params.userId}\r\n                     userId={this.props.match.params.userId}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}\r\n                     savePhoto={this.props.savePhoto}\r\n                     saveProfile={this.props.saveProfile}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    autorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile, requestPosts}),\r\n    withRouter,\r\n)(ProfileContainer);"],"sourceRoot":""}