{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/DialogForm.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","s","dialog","to","activeClassName","active","name","Message","message","senderClass","maxLength200","maxLengthCreator","DialogReduxForm","reduxForm","form","onSubmitSuccess","result","dispatch","reset","onSubmit","handleSubmit","Field","placeholder","component","Textarea","validate","required","type","AddDialogMessageForm","values","addMessage","messageText","Dialogs","dialogsElements","dialogs","map","d","index","key","messagesElements","messages","m","dialogsItems","messagesWrapper","mapStateToPropsForRedirect","state","isAuth","auth","dialogsContainer","this","requestDialogs","requestMessages","React","Component","compose","connect","dialogsPage","newMessageText","RedirectComponent"],"mappings":"qGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,gBAAkB,iCAAiC,QAAU,yBAAyB,WAAa,8B,uICY7RC,EATI,SAACC,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACI,yBAAKC,UAAWC,IAAEC,QACd,kBAAC,IAAD,CAASC,GAAIL,EAAMM,gBAAiBH,IAAEI,QAASR,EAAMS,QCClDC,EANC,SAACV,GACb,OACI,yBAAKG,UAAS,UAAKC,IAAEO,QAAP,YAAkBX,EAAMY,cAAgBZ,EAAMW,U,yCCE9DE,EAAeC,YAAiB,KAsBhCC,EAAkBC,YAAU,CAC9BC,KAAM,SACNC,gBANgB,SAACC,EAAQC,GACzBA,EAASC,YAAM,aAGKL,EApBL,SAAChB,GAChB,OACI,0BAAMsB,SAAUtB,EAAMuB,cAClB,yBAAKpB,UAAWC,cACZ,kBAACoB,EAAA,EAAD,CACIf,KAAM,cACNgB,YAAa,kBACbC,UAAWC,IACXC,SAAU,CAACC,IAAUhB,KAEzB,4BAAQiB,KAAK,UAAb,oBAsBDC,EAPc,SAAC/B,GAI1B,OAAO,kBAACe,EAAD,CAAiBO,SAHL,SAACU,GAChBhC,EAAMiC,WAAWD,EAAOE,iBCRjBC,EArBC,SAACnC,GAGb,IAAIoC,EAAkBpC,EAAMqC,QAAQC,KAAI,SAACC,EAAGC,GAAJ,OAAc,kBAAC,EAAD,CAAY/B,KAAM8B,EAAE9B,KAAMP,GAAIqC,EAAErC,GAAIuC,IAAKD,OAC3FE,EAAmB1C,EAAM2C,SAASL,KAAI,SAACM,EAAGJ,GAAJ,OAAc,kBAAC,EAAD,CAAS7B,QAASiC,EAAEjC,QAAST,GAAI0C,EAAE1C,GAAIuC,IAAKD,EAAO5B,YAAagC,EAAEhC,iBAE1H,OACI,yBAAKT,UAAWC,IAAEiC,SACd,yBAAKlC,UAAWC,IAAEyC,cACbT,GAEL,yBAAKjC,UAAWC,IAAEuC,UACd,yBAAKxC,UAAWC,IAAE0C,iBACbJ,GAEL,kBAAC,EAAyB1C,M,gBClBtC+C,EAA6B,SAACC,GAAD,MAAY,CACzCC,OAAQD,EAAME,KAAKD,S,OCEjBE,E,4LAGEC,KAAKpD,MAAMqD,iBACXD,KAAKpD,MAAMsD,oB,+BAIX,OAAO,kBAAC,EAAYF,KAAKpD,W,GARFuD,IAAMC,WAoBtBC,sBACXC,aATkB,SAACV,GACnB,MAAO,CACHX,QAASW,EAAMW,YAAYtB,QAC3BM,SAAUK,EAAMW,YAAYhB,SAC5BiB,eAAgBZ,EAAMW,YAAYC,kBAKb,CAAE3B,eAAYoB,mBAAgBC,uBDpB3B,SAACE,GAAe,IAEtCK,EAFqC,iLAKnC,OAAKT,KAAKpD,MAAMiD,OAER,kBAACO,EAAcJ,KAAKpD,OAFG,kBAAC,IAAD,CAAUM,GAAG,eALT,GAEXiD,IAAMC,WAWtC,OAFqCE,YAAQX,EAARW,CAAoCG,KCQ9DJ,CAGbN","file":"static/js/4.606db8fe.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3H22k\",\"dialogsItems\":\"Dialogs_dialogsItems__14lrj\",\"dialog\":\"Dialogs_dialog__1zNhc\",\"active\":\"Dialogs_active__2zWeJ\",\"messages\":\"Dialogs_messages__2Ooiw\",\"messagesWrapper\":\"Dialogs_messagesWrapper__1dtH6\",\"message\":\"Dialogs_message__2zAFB\",\"addMessage\":\"Dialogs_addMessage__3J2W0\"};","import React from 'react'\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst DialogItem = (props) => {\r\n    let path = '/dialogs/' + props.id;\r\n    return (\r\n        <div className={s.dialog}>\r\n            <NavLink to={path} activeClassName={s.active}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default DialogItem","import React from 'react'\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={`${s.message} ${props.senderClass}`}>{props.message}</div>\r\n    )\r\n};\r\n\r\nexport default Message","import React from \"react\";\r\nimport {Field, reduxForm, reset} from \"redux-form\";\r\n\r\nimport * as s from './Dialogs.module.css'\r\nimport {Textarea} from \"../Common/FormsControls/FormsControls\";\r\nimport {required, maxLengthCreator} from \"../../utils/validators/validators\";\r\n\r\nconst maxLength200 = maxLengthCreator(200);\r\n\r\nconst DialogForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div className={s.addMessage} >\r\n                <Field\r\n                    name={'messageText'}\r\n                    placeholder={'Message text...'}\r\n                    component={Textarea}\r\n                    validate={[required, maxLength200]}\r\n                />\r\n                <button type=\"submit\">Add message</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst afterSubmit = (result, dispatch) => {\r\n    dispatch(reset('dialog'));\r\n};\r\n\r\nconst DialogReduxForm = reduxForm({\r\n    form: 'dialog',\r\n    onSubmitSuccess: afterSubmit\r\n})(DialogForm);\r\n\r\nconst AddDialogMessageForm = (props) => {\r\n    const addMessage = (values) => {\r\n        props.addMessage(values.messageText);\r\n    };\r\n    return <DialogReduxForm onSubmit={addMessage} />\r\n};\r\n\r\nexport default AddDialogMessageForm;","import React from 'react'\r\nimport s from './Dialogs.module.css';\r\n\r\nimport DialogItem from './DialogItem/DialogItem'\r\nimport Message from './Message/Message'\r\nimport AddDialogMessageForm from \"./DialogForm\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    // Проходимся .map по массиву данных и создаем массив jsx элементов. Далее передаем их через пропсы в нужные компоненты.\r\n    let dialogsElements = props.dialogs.map((d, index) => <DialogItem name={d.name} id={d.id} key={index}/>);\r\n    let messagesElements = props.messages.map((m, index) => <Message message={m.message} id={m.id} key={index} senderClass={m.senderClass}/>);\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div className={s.messagesWrapper}>\r\n                    {messagesElements}\r\n                </div>\r\n                <AddDialogMessageForm {...props} />\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Dialogs","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login' />\r\n\r\n            return  <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent\r\n\r\n};","import React from 'react'\r\nimport {addMessage, requestDialogs, requestMessages} from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport {connect} from 'react-redux';\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass dialogsContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.requestDialogs();\r\n        this.props.requestMessages();\r\n    }\r\n\r\n    render() {\r\n        return <Dialogs {...this.props} />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogs: state.dialogsPage.dialogs,\r\n        messages: state.dialogsPage.messages,\r\n        newMessageText: state.dialogsPage.newMessageText,\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { addMessage, requestDialogs, requestMessages }),\r\n    withAuthRedirect\r\n)(dialogsContainer);"],"sourceRoot":""}